// 사용자 차단 설정 레이어 open
var open_user_block = function(gall_id,gall_name,gall_type) {
	var segment = window.location.pathname.split('/');
	
	if($('#user_block').css('display') != 'none') {
		close_user_block();
		return false;
	}
	
	if(segment[2] == 'lists' || segment[1] == 'mgallery' && segment[3] == 'lists' || segment[1] == 'mini' && segment[3] == 'lists') {
		ub_input_reset();
		ub_load_conf();
	}
	
	var style = (segment[2] == 'lists' || (segment[1] == 'mgallery' && segment[3] == 'lists')) ? 'left: 50%; top: -2px; margin-left: -199px;' : 'left: 50%; top: -2px; margin-left: -305px;';
		
	$('#user_block').attr('style',style);
	
	ub_sel_gallery(gall_id,gall_name,gall_type); //현재 갤러리 기본 등록
	
	$('#user_block').show();
}

// 사용자 차단 설정 레이어 close
var close_user_block = function() {
	$('#user_block').hide();
}

// 입력폼 초기화
var ub_input_reset = function() {
	var conf_elm_all	= $('#user_block .all_setting');
	var conf_elm_part	= $('#user_block .part_setting');
	var sel_gall		= $('#sel_gall_name', conf_elm_part);
	
	ub_conf_tab(0);
	
	$('input[name="gallSel"]').eq(0).attr('checked', true);
	$('input[name="gallNameWord"]').val('');
	$('#user_block .part_schbox .block_sch_gall > *').remove();
	$('#user_block .block_list > li').remove();
	$(sel_gall).attr('data-id', '').text('갤러리');
	
	ub_toggle_onoff($(conf_elm_all), 0);
	ub_toggle_onoff($(conf_elm_part), 0);
}

// 설정 탭
var ub_conf_tab = function(n) {
	$('#user_block .block_tab button').eq(n).addClass('on').siblings().removeClass('on');
	$('#user_block .tabcontent').eq(n).show().siblings().hide();
}

// 전체 & 갤러리별 저장
var ub_save_conf = function() {
	if(!confirm('적용하시겠습니까?')) {
		return false;
	}

	var conf_elm		= $('#user_block');
	var conf_elm_all	= $('#user_block .all_setting');
	var conf_elm_part	= $('#user_block .part_setting');
	
	var conf_arr		= {'all': conf_elm_all, 'parts': conf_elm_part};		// 전체 & 갤러리별

	for(var type in conf_arr) {
		var on_off		= $('.setting_onoff button', conf_arr[type]).hasClass('on') ? 1 : 0;
		var b_word		= ub_get_words($('input[name="word"]', conf_arr[type]));
		var b_id		= ub_get_words($('input[name="id"]', conf_arr[type]));
		var b_nick		= ub_get_words($('input[name="nick"]', conf_arr[type]));
		var b_ip		= ub_get_words($('input[name="ip"]', conf_arr[type]));
		
		
		var block_conf = {
			on :	on_off,
			word :	b_word.join('||'),
			id :	b_id.join('||'),
			nick :	b_nick.join('||'),
			ip :	b_ip.join('||')
		};
		
		// 갤러리별일 경우, 다른 갤러리 설정 정보와 병합함 
		if(type == 'parts') {
			var sel_gall_id = $('#sel_gall_name', conf_elm_part).attr('data-id');
			var sel_gall_name = $('#sel_gall_name', conf_elm_part).text();
			var sel_gall_type = $('#sel_gall_name', conf_elm_part).attr('data-gtype');

			var curr_block_conf		= block_conf;
			var block_json			= localStorage.getItem('block_parts');
			var block_conf			= block_json && $.parseJSON(block_json) ? $.parseJSON(block_json) : new Object;
			
			for(var gall_id in block_conf) {
				var jqs_gall_id = '';
				
				if (gall_id.indexOf('^MI') != -1) {
					jqs_gall_id = gall_id.replace('^MI','\\^MI');
				} else {
					jqs_gall_id = gall_id;
				}
				
				if($('.ub_block-'+ jqs_gall_id).index() < 0) {
					//console.log(gall_id);
					delete block_conf[gall_id];
				}
			}
			
			if(sel_gall_id) {
				if(sel_gall_type == 'migall') {
					curr_block_conf['name']	= sel_gall_name.replace('ⓝ','');
					block_conf[sel_gall_id.toString().replace('^MI','')+"^MI"] = curr_block_conf;
				} else {
					curr_block_conf['name']	= sel_gall_name;
					block_conf[sel_gall_id.toString()] = curr_block_conf;
				}
			}
		}
		
		localStorage.setItem('block_'+ type, JSON.stringify(block_conf));
	}
	
	alert('적용되었습니다.');
	
	//close_user_block();
	//location.reload();
}

// 갤러리별 한 항목만 저장
var ub_save_conf_one = function(sel_gall_id, sel_gall_name, sel_gall_type, field, word) {
	if(!confirm('적용하시겠습니까?')) {
		return false;
	}
	
	if(sel_gall_type == 'MI') {
		sel_gall_id = sel_gall_id + "^MI";
	}

	var block_json	= localStorage.getItem('block_parts');
	var block_conf	= block_json && $.parseJSON(block_json) ? $.parseJSON(block_json) : new Object;
	
	var new_block_conf = {
		on :	1,
		word :	'',
		id :	'',
		nick :	'',
		ip :	'',
		name :	sel_gall_name
	};
	
	if(typeof(block_conf[sel_gall_id]) == 'undefined') {
		new_block_conf[field] = word;		
		block_conf[sel_gall_id.toString()] = new_block_conf;
	}
	else {
		var old_value = block_conf[sel_gall_id][field];
		var old_words = old_value.split('||');
		
		if(old_words.indexOf(word) >= 0) {
			alert('이미 등록된 키워드입니다.');
			return false;
		}
		
		block_conf[sel_gall_id][field] = old_value ? old_value +'||'+ word : word;
	}
	
	localStorage.setItem('block_parts', JSON.stringify(block_conf));
	
	alert('적용되었습니다.');

	//close_user_block();
	location.reload();
}

// 전체 & 갤러리별 로드
var ub_load_conf = function() {
	var conf_elm			= $('#user_block');
	var conf_elm_all		= $('#user_block .all_setting');
	var conf_elm_part		= $('#user_block .part_setting');
	
	// 전체 갤러리
	var block_all_json		= localStorage.getItem('block_all');
	
	// 갤러리별
	var gall_list			= new Array();
	var block_parts_json	= localStorage.getItem('block_parts');
	var block_parts_conf	= block_parts_json ? $.parseJSON(block_parts_json) : null;

		
	ub_apply_conf(conf_elm_all, block_all_json);
	var block_gtype = '';
	for(var gall_id in block_parts_conf) {
		
		if(block_parts_conf[gall_id] == null || !block_parts_conf[gall_id]['name']) {
			delete block_parts_conf[gall_id];
			continue;
		}
		
		if (gall_id.indexOf('^MI') != -1) {
			block_gtype = 'MI';
		} else {
			block_gtype = '';
		}
		gall_list.push({ id: gall_id, gtype: block_gtype, name: block_parts_conf[gall_id]['name'], conf: JSON.stringify(block_parts_conf[gall_id]) });
	}
	
	$('#block_parts_list-tmpl').tmpl(gall_list).appendTo($('.block_list.gall', conf_elm_part));
}

// 갤러리 선택
var ub_sel_gallery = function(gall_id, gall_name, gall_type) {
	if(gall_type == 'MI') gall_type = 'migall';
	var conf_elm_part = $('#user_block .part_setting');
	var sel_gall = $('#sel_gall_name', conf_elm_part);
	
	if($(sel_gall).attr('data-id') == gall_id && $(sel_gall).attr('data-gtype') == gall_type) {
		alert('이미 선택된 갤러리입니다.');
		return false;
	}
	
	$(sel_gall).attr('data-gtype', gall_type);
	$(sel_gall).text(gall_name).attr('data-id', gall_id);
	if(gall_type == 'migall') {
		$(sel_gall).append('<em class="icon_mini">ⓝ</em>');
	}
	
	
	ub_apply_conf(conf_elm_part);
	ub_toggle_onoff($(conf_elm_part), 1);
	
	$('.intxt', conf_elm_part).val('');
	
	if (gall_id.indexOf('^MI') != -1) {
		gall_id = gall_id.replace('^MI','\\^MI');
	}
	
	
	//현재 갤러리 셋팅된거 로드..class name...
	var cls_gall_id = gall_id;
	if(gall_type == 'migall') {
		if (cls_gall_id.indexOf('^MI') == -1) cls_gall_id = cls_gall_id+'\\^MI';
	}
	
	if($('.ub_block-'+ cls_gall_id, conf_elm_part).index() >= 0) {
		$('.ub_block-'+ cls_gall_id, conf_elm_part).click();
	}
}

// 개별 설정 적용(세팅) - 전체 설정일 경우, gall_id 생략
var ub_apply_conf = function(target_elm, conf_json, gall_id, gall_type) {
	if($(target_elm).index() < 0) {
		return false;
	}
	
	var conf		= conf_json ? $.parseJSON(conf_json) : null;
		
	var is_on		= conf ? parseInt(conf.on)	: 0;
	var b_word		= conf ? conf.word			: null;
	var b_id		= conf ? conf.id			: null;
	var b_nick		= conf ? conf.nick			: null;
	var b_ip		= conf ? conf.ip			: null;
	
	// ub_toggle_onoff()보다 상위 실행해야 off가 적용됨
	if(typeof(gall_id) != 'undefined' && $('#sel_gall_name', target_elm).attr('data-id') != gall_id && $('#sel_gall_name', target_elm).attr('data-gtype') != gall_type) {
		ub_sel_gallery(gall_id, conf.name, gall_type);
	}
	
	ub_toggle_onoff($(target_elm), is_on);
	
	ub_set_words($('input[name="word"]',	target_elm),	b_word);
	ub_set_words($('input[name="id"]',		target_elm),	b_id);
	ub_set_words($('input[name="nick"]',	target_elm),	b_nick);
	ub_set_words($('input[name="ip"]',		target_elm),	b_ip);
}

// 개별 갤러리 삭제
var ub_del_gall = function(gall_id) {
	if (gall_id.indexOf('^MI') != -1) {
		gall_id = gall_id.replace('^MI','\\^MI');
	}
	var conf_elm_part = $('#user_block .part_setting');
	var sel_gall = $('#sel_gall_name', conf_elm_part);
	
	$('.ub_block-'+ gall_id, conf_elm_part).parent().remove();

	if($(sel_gall).attr('data-id') == gall_id) {
		$(sel_gall).attr('data-id', '').text('갤러리');
		
		ub_apply_conf(conf_elm_part);
	}
}

//on/off 스위치
var ub_toggle_onoff = function(target_elm, fixStatus) {
	var btn_elm = $('.setting_onoff button', target_elm);
	var on_off = typeof(fixStatus) != 'undefined' ? !fixStatus : $(btn_elm).hasClass('on');
	
	if(on_off) {
		$('.blind', btn_elm).text('off');
		$(btn_elm).removeClass('on');
		$('.word_wrap', $(target_elm)).addClass('setting_off');
		$('.word_wrap .intxt', target_elm).attr('disabled', true);
	}
	else {
		$('.blind', btn_elm).text('on');
		$(btn_elm).addClass('on');
		$('.word_wrap', $(target_elm)).removeClass('setting_off');
		$('.word_wrap .intxt', target_elm).attr('disabled', false);
	}
}

// 텍스트 입력 필드 텍스트 추가
var ub_add_text = function(elm) {
	var conf_elm = $(elm).parent();
	var word = $('input', conf_elm).val().trim();
	var word_list = $('.block_list', conf_elm);
	var words = ub_get_words($('input', conf_elm));
	
	if(word == '') {
		return false;
	}

	if(word.length > 20){
		alert('20자 내로 입력하십시오.');
		return false;
	}

	if($('li', word_list).length >= 10){
		alert('10개까지 등록 가능합니다.');
		return false;
	}

	if(words.indexOf(word) >= 0) {
		alert('이미 등록된 키워드입니다.');
		return false;
	}
	
	$('input', conf_elm).val('');
	$('#block_word-tmpl').tmpl({word:word}).appendTo(word_list);
}

// 텍스트 입력 필드 텍스트 삭제
var ub_remove_text = function(elm) {
	var conf_elm = $(elm).parent();
	
	$(conf_elm).remove();
}

// 텍스트 입력 필드에 입력된 문자 가져오기
var ub_get_words = function(input_elm) {
	var list_elm = $(input_elm).siblings('.block_list');
	
	var arr = new Array();
	
	$(list_elm).children('li').each(function() {
		arr.push($('.block_word', this).text());
	});
	
	return arr;
}

// 텍스트 입력 필드에 문자 입력하기
var ub_set_words = function(input_elm, serialize_words) {
	$(input_elm).siblings('.block_list').children('li').remove();
	
	if(!serialize_words) {
		return false;
	}
	
	var list_elm = $(input_elm).siblings('.block_list');
	var words = serialize_words.split('||');
	
	for(var i in words) {
		if(words[i] != '') {
			$('#block_word-tmpl').tmpl({word:words[i]}).appendTo(list_elm);
		}
	}
}

// 갤러리 검색
var ub_searchGallName = function(){
	var csrf_token = get_cookie('ci_c');
	var gallType = $('input[name="gallSel"]:checked').val();
	var gallName = $('input[name="gallNameWord"]').val().trim();
	
	if(gallName == '') {
		alert('검색어를 입력해주세요!!');
		return false;
	}
	
	$.ajax({
		type: "POST",
		cache: false,
	    async: true,
		url: "/ajax/gallery_ajax/sch_gall_name",
		dataType: "json",
		data: {
			ci_t : csrf_token,
			type: gallType,
			name: gallName
		},
		success: function(ajaxData) {
			$('#user_block .part_schbox .block_sch_gall > *').remove();
			$('#sch_gall-tmpl').tmpl(ajaxData).appendTo('#user_block .part_schbox .block_sch_gall');
		},
		error: function() {
			alert("서버에 오류가 발생하였습니다. 다시 시도해주세요.");
		}
	});
}

// 차단 체크
var chk_user_block = function(gall_id) {
	if(_GALLERY_TYPE_ == 'MI') {
		gall_id = gall_id + "^MI";
	}
	var ublock_elm	= $('.ub-content');
	var uword_elm	= $('.ub-word', ublock_elm);
	var uwriter_elm	= $('.ub-writer', ublock_elm);

	var conf_arr = new Array('all', 'parts');
	var type_arr = new Array('word', 'nick', 'ip', 'id');
	
	// 전체 갤러리
	var block_all_json		= localStorage.getItem('block_all');
	var block_all_conf		= block_all_json ? $.parseJSON(block_all_json) : null;
	
	// 갤러리별
	var block_parts_json	= localStorage.getItem('block_parts');
	var block_parts_conf	= block_parts_json ? $.parseJSON(block_parts_json) : null;
	
	block_parts_conf		= block_parts_conf && typeof(block_parts_conf[gall_id]) != 'undefined' ? block_parts_conf[gall_id] : null;
	
	var _chk_str = function(conf, type, elm) {

		var block_words = conf.split('||');
		var data_word = '';
		for (var i in block_words){
			block_words[i] = escape(block_words[i]);
		}
		
		for(var i in elm) {
			if($(elm).eq(parseInt(i)).closest('.ub-content').hasClass('block-disable') || $(uwriter_elm).eq(i).attr('data-nick') == '운영자') {
				continue;
			}
			
			if(type == 'word') data_word = $(uword_elm).eq(i).clone().find('.blind').remove().end().text();
			if(type == 'nick') data_word = $(uwriter_elm).eq(i).attr('data-nick');
			if(type == 'ip') data_word = $(uwriter_elm).eq(i).attr('data-ip');
			if(type == 'id') data_word = $(uwriter_elm).eq(i).attr('data-uid');
			
			if(typeof(data_word) == 'undefined' || !data_word) {
				continue;
			}
			
			var patt = type == 'word' ? eval('/'+ block_words.join('|') +'/m') : eval('/^'+ block_words.join('|') +'$/');
			data_word = escape(data_word)
			if(data_word.match(patt)) {

				var ub_container = $(elm).eq(parseInt(i)).closest('.ub-content');
				
				if($(ub_container).hasClass('album_body')) {
					$(ub_container).prev().addClass('block-disable');
				}
				else {
					$(ub_container).addClass('block-disable');
				}
			}
		}
	}
	
	for(var i in type_arr) {
		var conf = new Array();
		var elm = type_arr[i] == 'word' ? uword_elm : uwriter_elm;
		
		if(block_all_conf && block_all_conf['on'] && block_all_conf[type_arr[i]]) {
			conf.push(block_all_conf[type_arr[i]]);
		}
		
		if(block_parts_conf && block_parts_conf['on'] && block_parts_conf[type_arr[i]]) {
			conf.push(block_parts_conf[type_arr[i]]);
		}
		
		if(conf.length > 0) {
			_chk_str(conf.join('||'), type_arr[i], elm);
		}
	}
}

$(function() {
	var conf_elm = $('#user_block');
	
	// 텍스트 입력 '등록' 버튼
	$('.add_text button', conf_elm).click(function() {
		ub_add_text(this);
	});
	
	// 텍스트 입력 필드 엔터
	$('.add_text input', conf_elm).keyup(function(event) {
		if(event.keyCode == 13) {
			ub_add_text(this);
		}
	});
});